
package simplebankingsystem;

import java.sql.Connection;
import java.sql.DriverManager;
import javax.swing.JFrame;
import javax.swing.JOptionPane;




public class FastCash extends javax.swing.JFrame {
    
     String cardNo;
    
    int notFound = 0;
    int balance;
    
     String SUrl,SBank,SPass,query;
     
     
        
    public FastCash(String cardNo) {
        initComponents();
        
         this.cardNo= cardNo;
        
       
        
         SUrl= "jdbc:MySQL://localhost:3306/java_crud_db";
         SBank= "root";
        SPass="";  
        
        
        try
        {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(SUrl,SBank,SPass);
            java.sql.Statement st = con.createStatement(); 
            
            
             query = "SELECT * FROM statement ORDER BY date DESC;";
           
           java.sql.ResultSet rs = st.executeQuery(query);
           
           while(rs.next() && notFound==0 )
           {
               if(rs.getString("cardNo").equals(cardNo))
               { 
                     notFound=1;
                      balance  = rs.getInt("balance");
                      
               }
           }   
           
           lbBalance.setText("Maximum withdrawal amount: R"+balance);
        }
        catch(Exception e)
        {
          System.out.println("Error!"+e.getMessage());
        
        }
        
        
        
        
    }

    private FastCash() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbSelect = new javax.swing.JLabel();
        btR500 = new javax.swing.JButton();
        btR2000 = new javax.swing.JButton();
        btR1000 = new javax.swing.JButton();
        btR3000 = new javax.swing.JButton();
        btR10000 = new javax.swing.JButton();
        btBackSelect = new javax.swing.JButton();
        btR100 = new javax.swing.JButton();
        lbBalance = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(2147483647, 400));

        jPanel1.setBackground(new java.awt.Color(255, 102, 51));
        jPanel1.setPreferredSize(new java.awt.Dimension(500, 500));

        lbSelect.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lbSelect.setForeground(new java.awt.Color(255, 255, 255));
        lbSelect.setText("Select Withdrawal Amount");

        btR500.setBackground(new java.awt.Color(153, 153, 153));
        btR500.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btR500.setForeground(new java.awt.Color(255, 255, 255));
        btR500.setText("R 500");
        btR500.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btR500ActionPerformed(evt);
            }
        });

        btR2000.setBackground(new java.awt.Color(153, 153, 153));
        btR2000.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btR2000.setForeground(new java.awt.Color(255, 255, 255));
        btR2000.setText("R2 000");
        btR2000.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btR2000ActionPerformed(evt);
            }
        });

        btR1000.setBackground(new java.awt.Color(153, 153, 153));
        btR1000.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btR1000.setForeground(new java.awt.Color(255, 255, 255));
        btR1000.setText("R1 000");
        btR1000.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btR1000ActionPerformed(evt);
            }
        });

        btR3000.setBackground(new java.awt.Color(153, 153, 153));
        btR3000.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btR3000.setForeground(new java.awt.Color(255, 255, 255));
        btR3000.setText("R3 000");
        btR3000.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btR3000ActionPerformed(evt);
            }
        });

        btR10000.setBackground(new java.awt.Color(153, 153, 153));
        btR10000.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btR10000.setForeground(new java.awt.Color(255, 255, 255));
        btR10000.setText("R10 000");
        btR10000.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btR10000ActionPerformed(evt);
            }
        });

        btBackSelect.setBackground(new java.awt.Color(153, 153, 153));
        btBackSelect.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btBackSelect.setForeground(new java.awt.Color(255, 255, 255));
        btBackSelect.setText("Back");
        btBackSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBackSelectActionPerformed(evt);
            }
        });

        btR100.setBackground(new java.awt.Color(153, 153, 153));
        btR100.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btR100.setForeground(new java.awt.Color(255, 255, 255));
        btR100.setText("R 100");
        btR100.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btR100ActionPerformed(evt);
            }
        });

        lbBalance.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lbBalance.setForeground(new java.awt.Color(255, 255, 255));
        lbBalance.setText("Select Withdrawal Amount");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btR1000, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btR3000, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btR100, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btR500, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btR2000, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btBackSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btR10000, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(lbSelect))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(lbBalance)))
                .addContainerGap(84, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(lbSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btR500, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btR100, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btR2000, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btR1000, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btR3000, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btR10000, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(btBackSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(116, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btR500ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btR500ActionPerformed
      
        
          try{
          Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(SUrl,SBank,SPass);
         java.sql.Statement st = con.createStatement(); 
         
        
        

           
            String transactionType="Fast cash withdrawal";
            
            int amount=500;
            
         
            
            
           query = "SELECT * FROM statement ORDER BY date DESC;";
           
           java.sql.ResultSet rs = st.executeQuery(query);
           
           while(rs.next() && notFound==0 )
           {
               if(rs.getString("cardNo").equals(cardNo))
               { 
                     notFound=1;
                      balance  = rs.getInt("balance");
                      
               }
           }     
           
           
           if(balance>0)
           {
            balance = balance - amount;
           
           
             query = "INSERT INTO statement(cardNo,transactionType,balance, amount)"+
                        "VALUES('"+cardNo+"', '"+ transactionType+"', '"+balance+"', '"+amount+"')";
             
                 st.execute(query);
                 
                 
                 JOptionPane.showMessageDialog(new JFrame(),"You have withdrawn amount : R"+amount);
           
           
          Transaction TransactionFrame = new simplebankingsystem.Transaction(cardNo);
        TransactionFrame.setVisible(true);
        TransactionFrame.pack();
        TransactionFrame.setLocationRelativeTo(null);//center
        this.dispose();
           }
           else
           {
                JOptionPane.showMessageDialog(new JFrame(),"Declined!!Insuficient funds"+amount, "Error",JOptionPane.ERROR_MESSAGE);
               
               
           }
          
       
       
     }
      catch(Exception e)
     {
        System.out.println("Error!"+e.getMessage());
     }

    }//GEN-LAST:event_btR500ActionPerformed

    private void btR2000ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btR2000ActionPerformed
              
        
         try{
          Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(SUrl,SBank,SPass);
         java.sql.Statement st = con.createStatement(); 
         
        
        

           
            String transactionType="Fast cash withdrawal";
            
            int amount=2000;
            
         
            
            
           query = "SELECT * FROM statement ORDER BY date DESC;";
           
           java.sql.ResultSet rs = st.executeQuery(query);
           
           while(rs.next() && notFound==0 )
           {
               if(rs.getString("cardNo").equals(cardNo))
               { 
                     notFound=1;
                      balance  = rs.getInt("balance");
                      
               }
           }     
           
           
           if(balance>0)
           {
            balance = balance - amount;
           
           
             query = "INSERT INTO statement(cardNo,transactionType,balance, amount)"+
                        "VALUES('"+cardNo+"', '"+ transactionType+"', '"+balance+"', '"+amount+"')";
             
                 st.execute(query);
                 
                 
                 JOptionPane.showMessageDialog(new JFrame(),"You have withdrawn amount : R"+amount);
           
           
          Transaction TransactionFrame = new simplebankingsystem.Transaction(cardNo);
        TransactionFrame.setVisible(true);
        TransactionFrame.pack();
        TransactionFrame.setLocationRelativeTo(null);//center
        this.dispose();
           }
           else
           {
                JOptionPane.showMessageDialog(new JFrame(),"Declined!!Insuficient funds"+amount, "Error",JOptionPane.ERROR_MESSAGE);
               
               
           }
          
       
       
     }
      catch(Exception e)
     {
        System.out.println("Error!"+e.getMessage());
     }

    }//GEN-LAST:event_btR2000ActionPerformed

    private void btR1000ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btR1000ActionPerformed
     
         try{
          Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(SUrl,SBank,SPass);
         java.sql.Statement st = con.createStatement(); 
         
        
        

           
            String transactionType="Fast cash withdrawal";
            
            int amount=1000;
            
         
            
            
           query = "SELECT * FROM statement ORDER BY date DESC;";
           
           java.sql.ResultSet rs = st.executeQuery(query);
           
           while(rs.next() && notFound==0 )
           {
               if(rs.getString("cardNo").equals(cardNo))
               { 
                     notFound=1;
                      balance  = rs.getInt("balance");
                      
               }
           }     
           
           
           if(balance>0)
           {
            balance = balance - amount;
           
           
             query = "INSERT INTO statement(cardNo,transactionType,balance, amount)"+
                        "VALUES('"+cardNo+"', '"+ transactionType+"', '"+balance+"', '"+amount+"')";
             
                 st.execute(query);
                 
                 
                 JOptionPane.showMessageDialog(new JFrame(),"You have withdrawn amount : R"+amount);
           
           
          Transaction TransactionFrame = new simplebankingsystem.Transaction(cardNo);
        TransactionFrame.setVisible(true);
        TransactionFrame.pack();
        TransactionFrame.setLocationRelativeTo(null);//center
        this.dispose();
           }
           else
           {
                JOptionPane.showMessageDialog(new JFrame(),"Declined!!Insuficient funds"+amount, "Error",JOptionPane.ERROR_MESSAGE);
               
               
           }
          
       
       
     }
      catch(Exception e)
     {
        System.out.println("Error!"+e.getMessage());
     }

        
    }//GEN-LAST:event_btR1000ActionPerformed

    private void btR3000ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btR3000ActionPerformed
          
        
         try{
          Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(SUrl,SBank,SPass);
         java.sql.Statement st = con.createStatement(); 
         
        
        

           
            String transactionType="Fast cash withdrawal";
            
            int amount=3000;
            
         
            
            
           query = "SELECT * FROM statement ORDER BY date DESC;";
           
           java.sql.ResultSet rs = st.executeQuery(query);
           
           while(rs.next() && notFound==0 )
           {
               if(rs.getString("cardNo").equals(cardNo))
               { 
                     notFound=1;
                      balance  = rs.getInt("balance");
                      
               }
           }     
           
           
           if(balance>0)
           {
            balance = balance - amount;
           
           
             query = "INSERT INTO statement(cardNo,transactionType,balance, amount)"+
                        "VALUES('"+cardNo+"', '"+ transactionType+"', '"+balance+"', '"+amount+"')";
             
                 st.execute(query);
                 
                 
                 JOptionPane.showMessageDialog(new JFrame(),"You have withdrawn amount : R"+amount);
           
           
          Transaction TransactionFrame = new simplebankingsystem.Transaction(cardNo);
        TransactionFrame.setVisible(true);
        TransactionFrame.pack();
        TransactionFrame.setLocationRelativeTo(null);//center
        this.dispose();
           }
           else
           {
                JOptionPane.showMessageDialog(new JFrame(),"Declined!!Insuficient funds"+amount, "Error",JOptionPane.ERROR_MESSAGE);
               
               
           }
          
       
       
     }
      catch(Exception e)
     {
        System.out.println("Error!"+e.getMessage());
     }

    }//GEN-LAST:event_btR3000ActionPerformed

    private void btR10000ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btR10000ActionPerformed
        
         try{
          Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(SUrl,SBank,SPass);
         java.sql.Statement st = con.createStatement(); 
         
        
        

           
            String transactionType="Fast cash withdrawal";
            
            int amount=10000;
            
         
            
            
           query = "SELECT * FROM statement ORDER BY date DESC;";
           
           java.sql.ResultSet rs = st.executeQuery(query);
           
           while(rs.next() && notFound==0 )
           {
               if(rs.getString("cardNo").equals(cardNo))
               { 
                     notFound=1;
                      balance  = rs.getInt("balance");
                      
               }
           }     
           
           
           if(balance>0)
           {
            balance = balance - amount;
           
           
             query = "INSERT INTO statement(cardNo,transactionType,balance, amount)"+
                        "VALUES('"+cardNo+"', '"+ transactionType+"', '"+balance+"', '"+amount+"')";
             
                 st.execute(query);
                 
                 
                 JOptionPane.showMessageDialog(new JFrame(),"You have withdrawn amount : R"+amount);
           
           
          Transaction TransactionFrame = new simplebankingsystem.Transaction(cardNo);
        TransactionFrame.setVisible(true);
        TransactionFrame.pack();
        TransactionFrame.setLocationRelativeTo(null);//center
        this.dispose();
           }
           else
           {
                JOptionPane.showMessageDialog(new JFrame(),"Declined!!Insuficient funds"+amount, "Error",JOptionPane.ERROR_MESSAGE);
               
               
           }
          
       
       
     }
      catch(Exception e)
     {
        System.out.println("Error!"+e.getMessage());
     }

    }//GEN-LAST:event_btR10000ActionPerformed

    private void btBackSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBackSelectActionPerformed
     

        
           Transaction TransactionFrame = new simplebankingsystem.Transaction(cardNo);
        TransactionFrame.setVisible(true);
        TransactionFrame.pack();
        TransactionFrame.setLocationRelativeTo(null);//center
        this.dispose();
    }//GEN-LAST:event_btBackSelectActionPerformed

    private void btR100ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btR100ActionPerformed
          
         try{
          Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(SUrl,SBank,SPass);
         java.sql.Statement st = con.createStatement(); 
         
        
        

           
            String transactionType="Fast cash withdrawal";
            
            int amount=100;
            
         
            
            
           query = "SELECT * FROM statement ORDER BY date DESC;";
           
           java.sql.ResultSet rs = st.executeQuery(query);
           
           while(rs.next() && notFound==0 )
           {
               if(rs.getString("cardNo").equals(cardNo))
               { 
                     notFound=1;
                      balance  = rs.getInt("balance");
                      
               }
           }     
           
           
           if(balance>0)
           {
            balance = balance - amount;
           
           
             query = "INSERT INTO statement(cardNo,transactionType,balance, amount)"+
                        "VALUES('"+cardNo+"', '"+ transactionType+"', '"+balance+"', '"+amount+"')";
             
                 st.execute(query);
                 
                 
                 JOptionPane.showMessageDialog(new JFrame(),"You have withdrawn amount : R"+amount);
           
           
          Transaction TransactionFrame = new simplebankingsystem.Transaction(cardNo);
        TransactionFrame.setVisible(true);
        TransactionFrame.pack();
        TransactionFrame.setLocationRelativeTo(null);//center
        this.dispose();
           }
           else
           {
                JOptionPane.showMessageDialog(new JFrame(),"Declined!!Insuficient funds"+amount, "Error",JOptionPane.ERROR_MESSAGE);
               
               
           }
          
       
       
     }
      catch(Exception e)
     {
        System.out.println("Error!"+e.getMessage());
     }

        
        
        
    }//GEN-LAST:event_btR100ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FastCash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FastCash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FastCash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FastCash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new FastCash().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btBackSelect;
    private javax.swing.JButton btR100;
    private javax.swing.JButton btR1000;
    private javax.swing.JButton btR10000;
    private javax.swing.JButton btR2000;
    private javax.swing.JButton btR3000;
    private javax.swing.JButton btR500;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbBalance;
    private javax.swing.JLabel lbSelect;
    // End of variables declaration//GEN-END:variables
}
